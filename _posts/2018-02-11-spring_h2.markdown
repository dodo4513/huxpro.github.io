---
layout:     post
title:      "Spring boot H2 DB 시작 예제"
subtitle:   "부트 기반으로 H2 디비를 세팅해보자!"
date:       2018-2-11
author:     "Xavy"
catalog:    true
tags:
    - Spring
---

### 토비 스프링 3.1 예제 따라 하기와 관련된 다른 포스팅들

토비 책을 읽으며 나오는 소스들을 직접 하나하나 세팅 및 구현해 보려는 포스트들입니다. 
꾸준히 할 수 있을지는 모르겠지만 우선 시작!

1. [Intellij Spring boot Hello world 예제](https://dodo4513.github.io/2018/02/03/spring_hello_world/)

2. [Spring boot H2 DB 시작 예제](https://dodo4513.github.io/2018/02/11/spring_h2/)

위 포스팅의 결과물들은 아래의 깃에서 각 브랜치로 관리하고 있습니다!

[https://github.com/dodo4513/xavyspring](https://github.com/dodo4513/xavyspring)

- - -

### 시작하기 전에

토비 1장에 나오는 초난감 DAO 를 세팅하기 위해 DB를 붙이려고 한다. 예제에는 mySQL 이 사용되었으나, 편의상 H2 DB를 사용하면 좋을 것 같다.

**그리고 지난 [Intellij Spring boot Hello world 예제](https://github.com/dodo4513/xavyspring/tree/01_hello_world)의 소스 기반으로 이어서 개발한다.**
 
- IntelliJ IDEA 2017.1.5
- JRE: 1.8.0_112-release-736-b21 amd64
- JVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o
- Windows 10 10.0
- **spring boot 1.5.10.RELEASE**

- - -

### H2 세팅하기

이번 포스팅에선 아래와 같이 3개의 파일에 대해 알아볼 것이다. 각 파일 생성 시 구조를 참고할 것!

<img class="shadow" src="/img/my-post/20180211_spring_h2/1_init.JPG" alt="init">

- H2Configuration.java
- application.yml
- pom.xml

- - -

###### H2 DB

본격적으로 시작하기 전에 H2가 무엇인지 검색해 봤다.
H2 공식 사이트에 가보면 아래와 같이 소개하고 있다.

Very fast, open source, JDBC API
Embedded and server modes; in-memory databases
Browser based Console application
Small footprint: around 1.5 MB jar file size

[H2 Database Engine](http://www.h2database.com/html/main.html)

Spring Boot에서 지원하기 때문에 따로 설치하지 않아도 되고 간편히 사용할 수 있는 듯.

상용으로 사용은 힘들 것 같고, 테스트용으로 딱 적당해 보인다.

- - -

###### 1. pon.xml에 h2 database 추가

가장 먼저 maven dependency를 추가한다. 요런 dependency 들은 [MVN Repository](https://mvnrepository.com/)에서 볼 수 있다.

H2 Database Engine이란 이름으로 올라가 있는걸 볼 수 있다.

<img class="shadow" src="/img/my-post/20180211_spring_h2/2_repository.JPG" alt="repository">

오늘 기준 1.4.196이 가장 최신 버전인데 우리는 위 코드를 그대로 가져가지 않고, 아래와 같이 **groupId**와 **artifactId**만 명시한다.
왜냐하면 Spring Boot는 각 boot 버전 별로 최적화된 Dependency Version set을 관리하고 있는데, H2도 그 중 하나다.

```xml

<dependency>
    <groupId>com.h2database</groupId>
    <artifactId>h2</artifactId>
</dependency>

``` 

[Spring docs - Appendix F. Dependency versions](https://docs.spring.io/spring-boot/docs/1.5.10.RELEASE/reference/htmlsingle/#appendix-dependency-versions)

<img class="shadow" src="/img/my-post/20180211_spring_h2/3_h2_version.JPG" alt="version">

Spring Boot 1.5.10 RELEASE에서 h2database는 1.4.196 버전을 사용하는 걸 볼 수 있다.  

- - -

###### 2. application.yml에 h2 웹 콘솔 사용 설정 추가

Spring Boot 는 Dependency versions 뿐만 아니라, 수많은 Spring 환경 설정에 대해 개발자에게 물어보지 않고 관례를 적용한다.

[Spring docs - Appendix A. Common application properties](https://docs.spring.io/spring-boot/docs/1.5.10.RELEASE/reference/htmlsingle/#common-application-properties)

살펴보면 오만가지 설정이 다 들어가 있는걸 볼 수 있다. 우리에게 필요한 `spring.h2`에 대한 설정도 이미 들어가 있다.
단 h2의 웹 콘솔 사용 설정(spring.h2.console.enabled)은 **디폴트가 false** 라서 요건만 true로  변경해주면 된다.

application.yml, application.properties 등을 이용해 저 설정들을 커스텀할 수 있는데, 난 application.yml 을 이용했다.

<img class="shadow" src="/img/my-post/20180211_spring_h2/4_application_yml.JPG" alt="application.yml">

resources 패키지 밑에 application.yml 파일만 만들어두면 spring boot 가 실행될 때 알아서 읽어간다. (application.properties 를 사용 시에도 마찬가지)  

요기까지만 하고 프로젝트를 실행시켜보자.

<img class="shadow" src="/img/my-post/20180211_spring_h2/5_result.JPG" alt="result">

'/xavy'로 접속하면 H2 로그인 화면을 볼 수 있을 것이다. 만약 spring.h2.console.path 를 명시하지 않았다면, default 인 /h2-console 로 접속하면 된다. 

- - -

###### 3. (추가) 위 세팅을 자바 Config 로?

application.yml 로 세팅한걸 자바 configuration 으로도 해보자.

아까 작업했던 application.yml의 모든 설정을 주석치고 아래와 H2Configuration.java 클래스를 만들자.

```java

package study.configuration;

import org.h2.server.web.WebServlet;
import org.springframework.boot.web.servlet.ServletRegistrationBean;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class H2Configuration {

    static final String h2WebConsoleUrl = "/xavy/*";

    @Bean
    ServletRegistrationBean h2ServletRegistration() {
        ServletRegistrationBean registration = new ServletRegistrationBean(new WebServlet());
        registration.addUrlMappings(h2WebConsoleUrl);
        return registration;
    }
}

```

프로젝트를 실행해보면 아까와 같은 결과를 볼 수 있을 것이다. 
yml 로 세팅하는 것과 java 로 세팅하는 것, 둘 중 뭐가 좋다기 보다는 장단점이 있는 것 같은데 난 아직은 yml 이 더 편한것 같다.

java로 세팅하는게 좋다는 말은 어디서 많이 들은 것 같은데, 아직 체감하지는 못하겠다. 
앞으로의 스터디도 java config 를 적극적으로 사용하면서 차차 알아보자.  

- - -

### 마치며

드디어 토비 스프링 1장의 초난감 DAO 를 세팅할 환경 구성이 끝난 것 같다. 
하나하나 구성하려니 진행 속도가 아주 느리긴 한데, 이것저것 알아가는 것도 많아 좋은듯. 

위 소스는 아래의 Git에 올려두었습니다. 02_h2_database 브랜치를 참고하시면 됩니다.

[https://github.com/dodo4513/xavyspring/tree/02_h2_database](https://github.com/dodo4513/xavyspring/tree/02_h2_database)

잘못된 점이나 모호한 설명이 있다면, 편하게 메일 주세요~ 적극적으로 반영하도록 하겠습니다!

- - -

### 참고

[블로그 글 저장 및 표시 해보기 (Spring Boot + Spring Data JPA + H2)](http://millky.com/@origoni/post/1155?language=ko_kr)

[Integrate an H2 Database in Your Spring Boot App](https://dzone.com/articles/integrate-h2-database-in-your-spring-boot-applicat)